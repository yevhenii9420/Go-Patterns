// Паттерн Одиночка (Singleton)
//
// В данном примере описан потоко-безопасный метод, используя пакет sync.
// В противном случае, несколько go-рутин могут создать несколько
// экземпляров типа *singleton, каждый из которых затрет собой instance.

package singleton

import (
	"sync"
)

// Тип singleton, экземпляр которого требуется создавать
type singleton struct {
}

// Инстанс, который будет содержать единственный экземпляр типа *singleton
var instance *singleton

// Объект, который позволяет выполнять некоторое действие только один раз
var once sync.Once

// Функция создает и возвращает экземпляр типа *singleton
func GetInstance() *singleton {
	// Метод once.Do вызовет переданую в него функцию только один раз.
	// Под капотом используется пакет sync/atomic для обеспечения атомарности операции
	// и блокировки с помощью мьютексов.
	once.Do(func() {
		instance = &singleton{}
	})
	return instance
}
